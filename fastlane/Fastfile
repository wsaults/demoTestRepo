# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

def build_app
  project_file = 'testDemoApp.xcodeproj'
  increment_build_number(xcodeproj: project_file) # version bump

  gym(
    workspace: 'testDemoApp.xcworkspace',
    scheme: 'testDemoApp'
  )

  commit_version_bump(
    message: 'Version Bump by fastlane',
    xcodeproj: project_file,
    force: true
  )

  push_to_git_remote
end

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  lane :release do
    #capture_screenshots
    build_app
    #upload_to_app_store       # Upload the screenshots and the binary to iTunes
    #slack                     # Let your team-mates know the new version is live
  end

  lane :beta do
    #increment_build_number(
    #  build_number: app_store_build_number + 1,
    #  xcodeproj: "testDemoApp.xcodeproj"
    #)
  end

  lane :test do
    run_tests(scheme: "testDemoApp")
  end
end

################
# Success/Error:
################

after_all do |lane|
  # This block is called, only if the executed lane was successful
  if ENV["SLACK_URL"]
    slack(
      message: "Hurray!!!",
      success: true,
      default_payloads: [:test_result, :git_branch]
    )
  end

  clean_build_artifacts
end

error do |lane, exception|
  if ENV["SLACK_URL"]
    slack(
      message: exception.to_s,
      success: false
    )
  end
end
